{"ast":null,"code":"var _jsxFileName = \"/home/user/development/test/project/frontend/src/components/eventlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    fetch('/events').then(response => response.json()).then(data => setEvents(data)).catch(error => console.error('Error fetching event:', error));\n  }, []);\n  const handleDeleteEvent = async eventId => {\n    try {\n      const response = await fetch(`/events/${eventId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete the report.');\n      }\n      const updatedEvents = events.filter(event => event.id !== eventId);\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditField = async (eventId, field, value) => {\n    try {\n      const response = await fetch(`/events/${eventId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          [field]: value\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update ${field}.`);\n      }\n      const updatedEvents = Event.map(event => {\n        if (event.id === eventId) {\n          return {\n            ...event,\n            [field]: value\n          };\n        }\n        return event;\n      });\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditMedia = async (eventId, file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(`http://localhost:5000/events/${eventId}/media`, {\n        method: 'PATCH',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Failed to update media. Server response: ${JSON.stringify(errorData)}`);\n      }\n      const updatedEvent = await response.json();\n      const updatedEvents = events.map(event => {\n        if (event.id === eventId) {\n          return {\n            ...event,\n            media: updatedEvent.media\n          };\n        }\n        return event;\n      });\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    style: {\n      width: '90%',\n      marginLeft: '200px',\n      height: '400px'\n    },\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEditField(event.id, 'title', prompt('Enter new title:', event.title)),\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEditField(event.id, 'host', prompt('Enter new host:', event.host)),\n          children: [\"Host: \", event.host]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEditField(event.id, 'location', prompt('Enter new location:', event.location)),\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEditField(event.id, 'time', prompt('Enter new time:', event.time)),\n          children: [\"Time: \", event.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleEditField(event.id, 'date', prompt('Enter new date:', event.date)),\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-media\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => handleEditMedia(event.id, e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.media,\n          alt: \"Event Media\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventsList","_s","events","setEvents","fetch","then","response","json","data","catch","error","console","handleDeleteEvent","eventId","method","ok","Error","updatedEvents","filter","event","id","handleEditField","field","value","headers","body","JSON","stringify","Event","map","handleEditMedia","file","formData","FormData","append","errorData","updatedEvent","media","className","style","width","marginLeft","height","children","onClick","prompt","title","fileName","_jsxFileName","lineNumber","columnNumber","host","location","time","date","type","accept","onChange","e","target","files","src","alt","_c","$RefreshReg$"],"sources":["/home/user/development/test/project/frontend/src/components/eventlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst EventsList = () => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n\n    fetch('/events')\n      .then(response => response.json())\n      .then(data => setEvents(data))\n      .catch(error => console.error('Error fetching event:', error));\n  }, []);\n  const handleDeleteEvent = async (eventId) => {\n    try {\n      const response = await fetch(`/events/${eventId}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete the report.');\n      }\n      const updatedEvents = events.filter(event => event.id !== eventId);\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditField = async (eventId, field, value) => {\n    try {\n      const response = await fetch(`/events/${eventId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ [field]: value }),\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update ${field}.`);\n      }\n      const updatedEvents = Event.map(event => {\n        if (event.id === eventId) {\n          return { ...event, [field]: value };\n        }\n        return event;\n      });\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditMedia = async (eventId, file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(`http://localhost:5000/events/${eventId}/media`, {\n        method: 'PATCH',\n        body: formData,\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Failed to update media. Server response: ${JSON.stringify(errorData)}`);\n      }\n      const updatedEvent = await response.json();\n      const updatedEvents = events.map(event => {\n        if (event.id === eventId) {\n          return { ...event, media: updatedEvent.media };\n        }\n        return event;\n      });\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"card-grid\" style={{ width: '90%',marginLeft: '200px', height: '400px' }}>\n      {/* <UserSideBar/> */}\n      {events.map(event => (\n        <div key={event.id} className=\"card\">\n          {/* <button className=\"delete-btn\" onClick={() => handleDeleteEvent(event.id)}>x</button> */}\n          <h3>\n            <span onClick={() => handleEditField(event.id, 'title', prompt('Enter new title:', event.title))}>\n              {event.title}\n            </span>\n          </h3>\n          <p>\n            <span onClick={() => handleEditField(event.id, 'host', prompt('Enter new host:', event.host))}>\n              Host: {event.host}\n            </span>\n          </p>\n          <p>\n            <span onClick={() => handleEditField(event.id, 'location', prompt('Enter new location:', event.location))}>\n              Location: {event.location}\n            </span>\n          </p>\n          <p>\n            <span onClick={() => handleEditField(event.id, 'time', prompt('Enter new time:', event.time))}>\n              Time: {event.time}\n            </span>\n          </p>\n          <p>\n            <span onClick={() => handleEditField(event.id, 'date', prompt('Enter new date:', event.date))}>\n              Date: {event.date}\n            </span>\n          </p>\n          <div className=\"card-media\">\n            <input type=\"file\" accept=\"image/*\" onChange={(e) => handleEditMedia(event.id, e.target.files[0])} />\n            <img src={event.media} alt=\"Event Media\" onClick={() => {}} />\n          </div>\n\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default EventsList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IAEdO,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAAE,WAAUS,OAAQ,EAAC,EAAE;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,MAAMC,aAAa,GAAGf,MAAM,CAACgB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKP,OAAO,CAAC;MAClEV,SAAS,CAACc,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACD,MAAMW,eAAe,GAAG,MAAAA,CAAOR,OAAO,EAAES,KAAK,EAAEC,KAAK,KAAK;IACvD,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMF,KAAK,CAAE,WAAUS,OAAQ,EAAC,EAAE;QACjDC,MAAM,EAAE,OAAO;QACfU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,CAACL,KAAK,GAAGC;QAAM,CAAC;MACzC,CAAC,CAAC;MACF,IAAI,CAACjB,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,oBAAmBM,KAAM,GAAE,CAAC;MAC/C;MACA,MAAML,aAAa,GAAGW,KAAK,CAACC,GAAG,CAACV,KAAK,IAAI;QACvC,IAAIA,KAAK,CAACC,EAAE,KAAKP,OAAO,EAAE;UACxB,OAAO;YAAE,GAAGM,KAAK;YAAE,CAACG,KAAK,GAAGC;UAAM,CAAC;QACrC;QACA,OAAOJ,KAAK;MACd,CAAC,CAAC;MACFhB,SAAS,CAACc,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACD,MAAMoB,eAAe,GAAG,MAAAA,CAAOjB,OAAO,EAAEkB,IAAI,KAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC7B,MAAMzB,QAAQ,GAAG,MAAMF,KAAK,CAAE,gCAA+BS,OAAQ,QAAO,EAAE;QAC5EC,MAAM,EAAE,OAAO;QACfW,IAAI,EAAEO;MACR,CAAC,CAAC;MACF,IAAI,CAAC1B,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAMoB,SAAS,GAAG,MAAM7B,QAAQ,CAACC,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIS,KAAK,CAAE,4CAA2CU,IAAI,CAACC,SAAS,CAACQ,SAAS,CAAE,EAAC,CAAC;MAC1F;MACA,MAAMC,YAAY,GAAG,MAAM9B,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC1C,MAAMU,aAAa,GAAGf,MAAM,CAAC2B,GAAG,CAACV,KAAK,IAAI;QACxC,IAAIA,KAAK,CAACC,EAAE,KAAKP,OAAO,EAAE;UACxB,OAAO;YAAE,GAAGM,KAAK;YAAEkB,KAAK,EAAED,YAAY,CAACC;UAAM,CAAC;QAChD;QACA,OAAOlB,KAAK;MACd,CAAC,CAAC;MACFhB,SAAS,CAACc,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACD,oBACEX,OAAA;IAAKuC,SAAS,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAACC,UAAU,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAErFzC,MAAM,CAAC2B,GAAG,CAACV,KAAK,iBACfpB,OAAA;MAAoBuC,SAAS,EAAC,MAAM;MAAAK,QAAA,gBAElC5C,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAM6C,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACF,KAAK,CAACC,EAAE,EAAE,OAAO,EAAEyB,MAAM,CAAC,kBAAkB,EAAE1B,KAAK,CAAC2B,KAAK,CAAC,CAAE;UAAAH,QAAA,EAC9FxB,KAAK,CAAC2B;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACLnD,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAM6C,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACF,KAAK,CAACC,EAAE,EAAE,MAAM,EAAEyB,MAAM,CAAC,iBAAiB,EAAE1B,KAAK,CAACgC,IAAI,CAAC,CAAE;UAAAR,QAAA,GAAC,QACvF,EAACxB,KAAK,CAACgC,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACJnD,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAM6C,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACF,KAAK,CAACC,EAAE,EAAE,UAAU,EAAEyB,MAAM,CAAC,qBAAqB,EAAE1B,KAAK,CAACiC,QAAQ,CAAC,CAAE;UAAAT,QAAA,GAAC,YAC/F,EAACxB,KAAK,CAACiC,QAAQ;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACJnD,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAM6C,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACF,KAAK,CAACC,EAAE,EAAE,MAAM,EAAEyB,MAAM,CAAC,iBAAiB,EAAE1B,KAAK,CAACkC,IAAI,CAAC,CAAE;UAAAV,QAAA,GAAC,QACvF,EAACxB,KAAK,CAACkC,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACJnD,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAM6C,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACF,KAAK,CAACC,EAAE,EAAE,MAAM,EAAEyB,MAAM,CAAC,iBAAiB,EAAE1B,KAAK,CAACmC,IAAI,CAAC,CAAE;UAAAX,QAAA,GAAC,QACvF,EAACxB,KAAK,CAACmC,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACJnD,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAK,QAAA,gBACzB5C,OAAA;UAAOwD,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,SAAS;UAACC,QAAQ,EAAGC,CAAC,IAAK5B,eAAe,CAACX,KAAK,CAACC,EAAE,EAAEsC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrGnD,OAAA;UAAK8D,GAAG,EAAE1C,KAAK,CAACkB,KAAM;UAACyB,GAAG,EAAC,aAAa;UAAClB,OAAO,EAAEA,CAAA,KAAM,CAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA,GA9BE/B,KAAK,CAACC,EAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgCb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjD,EAAA,CA9GID,UAAU;AAAA+D,EAAA,GAAV/D,UAAU;AA+GhB,eAAeA,UAAU;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}