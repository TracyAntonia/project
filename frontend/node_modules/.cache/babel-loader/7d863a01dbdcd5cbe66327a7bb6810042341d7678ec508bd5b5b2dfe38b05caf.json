{"ast":null,"code":"var _jsxFileName = \"/home/user/development/test/project/frontend/src/components/signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [userName, setuserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case \"userName\":\n        setuserName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      case \"confirmPassword\":\n        setConfirmPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Check if the passwords match\n    if (password !== confirmPassword) {\n      alert(\"The passwords do not match.\");\n      return;\n    }\n\n    // Check if the password is at least 6 characters long\n    if (password.length < 6) {\n      alert(\"Password must be at least 6 characters long.\");\n      return;\n    }\n\n    // Check if the email contains the '@' symbol\n    if (!email.includes(\"@\")) {\n      alert(\"Invalid email format. Please include the '@' symbol.\");\n      return;\n    }\n    try {\n      // Create a data object with the user information\n      const userData = {\n        userName,\n        email,\n        password\n      };\n\n      // Send the user data to the backend server\n      const response = await fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n\n      // Handle the response from the server\n      if (response.ok) {\n        const responseData = await response.json();\n        alert(\"User data saved:\", responseData);\n\n        // Clear the form after successful submission\n        setuserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n\n        // You can also redirect the user to a new page or display a success message.\n        // For example, if you have a component that shows a success message after signup:\n        // setSignupSuccess(true);\n      } else {\n        // Handle server-side errors or other errors\n        console.error(\"Failed to save user data:\", response.statusText);\n      }\n    } catch (error) {\n      // Handle fetch-related errors (e.g., network errors)\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white',\n        paddingTop: '30px'\n      },\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"user Name\",\n        name: \"userName\",\n        value: userName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"t052PmZId6CMr08rwfqhGXs2Dgk=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","userName","setuserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","length","includes","userData","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","console","error","statusText","className","children","style","color","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/user/development/test/project/frontend/src/components/signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./signup.css\";\n\nconst Signup = () => {\n  const [userName, setuserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"userName\":\n        setuserName(value);\n        break;\n      \n      case \"email\":\n        setEmail(value);\n        break;\n      \n      case \"password\":\n        setPassword(value);\n        break;\n\n      case \"confirmPassword\":\n        setConfirmPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    // Check if the passwords match\n    if (password !== confirmPassword) {\n      alert(\"The passwords do not match.\");\n      return;\n    }\n  \n    // Check if the password is at least 6 characters long\n    if (password.length < 6) {\n      alert(\"Password must be at least 6 characters long.\");\n      return;\n    }\n  \n    // Check if the email contains the '@' symbol\n    if (!email.includes(\"@\")) {\n      alert(\"Invalid email format. Please include the '@' symbol.\");\n      return;\n    }\n\n    try {\n      // Create a data object with the user information\n      const userData = {\n        userName,\n        email,\n        password,\n      };\n\n      // Send the user data to the backend server\n      const response = await fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(userData),\n      });\n\n      // Handle the response from the server\n      if (response.ok) {\n        const responseData = await response.json();\n        alert(\"User data saved:\", responseData);\n\n        // Clear the form after successful submission\n        setuserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n\n        // You can also redirect the user to a new page or display a success message.\n        // For example, if you have a component that shows a success message after signup:\n        // setSignupSuccess(true);\n      } else {\n        // Handle server-side errors or other errors\n        console.error(\"Failed to save user data:\", response.statusText);\n      }\n    } catch (error) {\n      // Handle fetch-related errors (e.g., network errors)\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  return (\n    <div className=\"form1\">\n    <h1 style={{color:'white', paddingTop:'30px'}}>Sign Up</h1>\n    <form onSubmit={handleSubmit} className=\"signup\"  >\n      \n      <input type=\"text\" placeholder=\"user Name\" name=\"userName\" value={userName} onChange={handleChange} />\n      \n      <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={handleChange} />\n    \n      <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={handleChange} />\n\n      <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}